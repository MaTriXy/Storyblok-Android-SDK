apply plugin: 'com.android.application'
//wrap with try and catch so the build is working even if the signing stuff is missing
try {
    apply from: '../../../signing.gradle'
} catch (ex) {
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 20
        versionName '0.2.0'

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def file = output.outputFile
                def fileName = file.name.replace(".apk", "-v" + versionName + "-c" + versionCode + ".apk")
                output.outputFile = new File(file.parentFile, fileName)
            }
        }

        buildConfigField "String", "STORYBLOK_TOKEN", "\"" + getProps("storyblok.token") + "\""
    }
    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            try {
                signingConfig signingConfigs.debug
            } catch (ex) {
            }
            minifyEnabled false
        }
        release {
            try {
                signingConfig signingConfigs.release
            } catch (ex) {
            }
            zipAlignEnabled true
            minifyEnabled false
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile project(path: ':library')

    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"

    // used to fill the RecyclerView with the DrawerItems
    // and provides single and multi selection, expandable items
    // https://github.com/mikepenz/FastAdapter
    compile 'com.mikepenz:fastadapter:2.5.0@aar'

    // the sample uses more advanced functions of the fastadapter
    // https://github.com/mikepenz/FastAdapter/
    compile 'com.mikepenz:fastadapter-commons:2.5.0@aar'

    // used to base on some backwards compatible themes
    // contains util classes to support various android versions, and clean up code
    // comes with the awesome "Holder"-Pattern
    // https://github.com/mikepenz/Materialize
    compile 'com.mikepenz:materialize:1.0.1@aar'

    //used to generate the drawer on the left
    //https://github.com/mikepenz/MaterialDrawer
    compile('com.mikepenz:materialdrawer:5.9.0@aar') {
        transitive = true
        exclude module: "fastadapter"
    }

    //used to display the icons in the drawer
    //https://github.com/mikepenz/Android-Iconics
    compile 'com.mikepenz:material-design-iconic-typeface:2.2.0.1@aar'

    //used to generate the Open Source section
    //https://github.com/mikepenz/AboutLibraries
    compile('com.mikepenz:aboutlibraries:5.9.5@aar') {
        transitive = true
        exclude module: "fastadapter"
    }

    //https://github.com/JakeWharton/butterknife
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return "";
    }
}